--- /mnt/data/2021_11_multi_chunk_repair/APRConfig/results_defects4j/defects4j_Time_18/defects4j_Time_18/src/main/java/org/joda/time/chrono/GJChronology.java	2022-05-04 01:21:35.162282893 -0400
+++ /mnt/data/2021_11_multi_chunk_repair/APRConfig/results_defects4j/defects4j_Time_18/mcrepair_pfl/patch/susp_0/donor_10/patch_0/GJChronology.java	2022-05-04 01:30:34.826841938 -0400
@@ -352,29 +352,14 @@
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
-        Chronology base;
-        if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        }
+        long instant = year().set(0, year);
+instant = monthOfYear().set(instant, monthOfYear);
+instant = dayOfMonth().set(instant, dayOfMonth);
+instant = hourOfDay().set(instant, hourOfDay);
+instant = minuteOfHour().set(instant, minuteOfHour);
+instant = secondOfMinute().set(instant, secondOfMinute);
+return millisOfSecond().set(instant, millisOfSecond);
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
-                throw new IllegalArgumentException("Specified date does not exist");
-            }
-        }
-        return instant;
     }
 
     /**

